<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Go" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <UsingTask TaskName="RegexTransform" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" />
		    <Vers ParameterType="System.String" Required="False" />
        </ParameterGroup>
        <Task>
		    <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Using Namespace="System.Text.RegularExpressions" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Code Type="Fragment" Language="cs">
				<![CDATA[
					// Generate Version Numbers
					string datedBuildNumber = string.Format("{0}{1:000}", DateTime.Now.ToString("yy"), DateTime.Now.DayOfYear);
					string revisionNumber = !string.IsNullOrWhiteSpace(Vers) ? Vers : DateTime.Now.ToString("HHmm");

					foreach (ITaskItem item in Items)
					{
						// Find Current Version in file
						string fileName = item.GetMetadata("FullPath");

						string findAssmVers = @"AssemblyVersion\(\""(?<major>\d+)\.(?<minor>\d+)\.(?<build>\d+)\.(?<revision>\d+)";
						string findAssmFileVers = @"AssemblyFileVersion\(\""(?<major>\d+)\.(?<minor>\d+)\.(?<build>\d+)\.(?<revision>\d+)";

						if (!File.Exists(fileName))
						{
							Log.LogError(null, null, null, null, 0, 0, 0, 0, String.Format("Could not find version file: {0}", fileName), new object[0]);
						}
						string content = File.ReadAllText(fileName);

						var m = Regex.Match(content, findAssmVers);


						// Generate new Version Numbers
						string assmVers = string.Format("AssemblyVersion(\"{0}.{1}.0.0",
												  m.Groups["major"].Value,
												  m.Groups["minor"]);

						string assmFileVers = string.Format(
								  "AssemblyFileVersion(\"{0}.{1}.{2}.{3}",
								  m.Groups["major"].Value,
								  m.Groups["minor"].Value,
								  datedBuildNumber,
								  revisionNumber);

						// Write new version numbers
						string result = Regex.Replace(content, findAssmVers, assmVers);
						result = Regex.Replace(result, findAssmFileVers, assmFileVers);
						File.WriteAllText(fileName, result);

                        Log.LogMessage("Updated {0} - {1})\" {2})\"", fileName, assmVers, assmFileVers);
					}
				]]>
            </Code>
        </Task>
    </UsingTask>
</Project>